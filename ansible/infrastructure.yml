---
- name: Provision Higly-Available EC2 and VPC on AWS
  hosts: localhost
  gather_facts: false
  tasks:
  - name: Import configuration
    include_vars:
      file: "../config.json"
      name: config
  - name: Create DynamoDB table for locking
    community.aws.dynamodb_table:
      name: "rancher-lock-{{ config.cluster_id }}"
      state: present
      hash_key_name: LockID
      hash_key_type: STRING
      read_capacity: 5
      write_capacity: 5
  - name: Create S3 state bucket
    amazon.aws.s3_bucket:
      name: "rancher-state-{{ config.cluster_id }}"
      state: present
      region: "{{ config.region }}"
      versioning: yes
      encryption: AES256
      force: yes
  - name: Create S3 state bucket IAC directory
    amazon.aws.aws_s3:
      bucket: "rancher-state-{{ config.cluster_id }}"
      object: 'iac/'
      mode: create
  - name: Create S3 state bucket RKE directory
    amazon.aws.aws_s3:
      bucket: "rancher-state-{{ config.cluster_id }}"
      object: 'rke/'
      mode: create
  - name: Create S3 state bucket SSH directory
    amazon.aws.aws_s3:
      bucket: "rancher-state-{{ config.cluster_id }}"
      object: 'ssh/'
      mode: create
  - name: Deploy Infrastructure 
    community.general.terraform:
      project_path: '../terraform/'
      state: present
      force_init: yes
      init_reconfigure: yes
      variables_files: '../config.json'
      backend_config:
        bucket: "rancher-state-{{ config.cluster_id }}"
        key: "iac/terraform.tfstate"
        region: "{{ config.region }}"
        dynamodb_table: "rancher-lock-{{ config.cluster_id }}"
        encrypt: "true"
    register: terraform
  - name: Add Bastion to host file
    blockinfile:
      path: ../.hosts
      block: |
        [bastion]
        "{{ terraform.outputs.bastion.value }}" ansible_ssh_private_key_file="{{ config.ssh }}"
  - name: Run latest RKE supported K8s version
    shell: 
      cmd: rke config --list-version
    register: rke_version
  - name: Generate cluster.yml to provision RKE
    template:
      src: '../rke/cluster.j2'
      dest: '../rke/cluster.yml'
    vars:
      nodes: "{{ terraform.outputs.instances_ips.value | ipaddr }}"
      version: "{{ rke_version.stdout }}"
#  - name: Provision RKE
#    shell:
#      cmd: rke up --config ../rke/cluster.yml